/**
 * Code below was taken from the original plugin
 * Minor changes have been added.
*/
const fs        = require('node-fs');
const util      = require('../../lib/util');

let blockedResources    = [];
let verbose             = true;

module.exports = {

    init: function() {
        util.log(`[SenseBlock] Sensemakers resource blocklist loaded!`);

        getBlocklist = function() {	

            const block = JSON.parse(fs.readFileSync('./blocklist.json', 'utf8'));
            blockedResources = block.resource;
            verbose = block.verbose;

            setTimeout(()=>{
                getBlocklist();
                if (block.verboseUpdate)
                    util.log(`[SenseBlock] Updated blocklist`);
            }, ( ((block.updateTimer) * 1000)) );
        }
        getBlocklist();        
    },
    
    tabCreated: (req, res, next) => {
        req.prerender.tab.Network.setRequestInterception({
            patterns: [{urlPattern: '*'}]
        }).then(() => {
            next();
        });

        req.prerender.tab.Network.requestIntercepted(({interceptionId, request}) => {

            let shouldBlock = false;
            blockedResources.forEach((substring) => {
                    if (request.url.indexOf(substring) >= 0) {
                        shouldBlock = true;
                        if (verbose)
                            util.log(`[SenseBlock] Resource blocked: ${request.url}`);
                    }
            });

            let interceptOptions = {interceptionId};
            if (shouldBlock) {
                interceptOptions.errorReason = 'Aborted';
            }
            req.prerender.tab.Network.continueInterceptedRequest(interceptOptions);
        });
    }
};